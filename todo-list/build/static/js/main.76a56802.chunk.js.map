{"version":3,"sources":["atoms.tsx","components/CreateCategory.tsx","components/CreateToDo.tsx","components/ToDo.tsx","components/ToDoList.tsx","img/light.png","img/dark.png","theme.tsx","App.tsx","index.tsx"],"names":["Categories","CustomCategories","JSON","parse","window","localStorage","getItem","categoryState","atom","key","default","TO_DO","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","isDarkAtom","CreateCategory","useForm","register","handleSubmit","setValue","errors","formState","setError","setCategory","useSetRecoilState","Input","styled","input","props","theme","boxBgColor","boxTextColor","Btn","button","accentColor","Form","form","onSubmit","findIndex","data","message","shouldFocus","push","setItem","stringify","required","placeholder","style","color","position","bottom","CreateToDo","setToDos","useRecoilValue","marginBottom","oldToDos","newToDos","text","id","Date","now","ToDo","event","name","currentTarget","targetIndex","newToDo","slice","Li","li","Grid","div","onClick","DOING","DONE","map","customCategory","ToDoList","useRecoilState","catecory","setCatecory","Container","Title","h1","Box","DropDown","value","onInput","listStyle","width","aToDo","lightTheme","bgColor","borderColor","primaryTextColor","secondaryTextColor","errorColor","darkTheme","GlobalStyle","createGlobalStyle","App","isDark","TopBar","ThemeChanger","setDarkAtom","prev","src","lightIcon","darkIcon","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76a56802.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\n\nexport enum Categories {\n  \"TO_DO\" = \"TO_DO\",\n  \"DOING\" = \"DOING\",\n  \"DONE\" = \"DONE\"\n}\nexport const CustomCategories: string[] = JSON.parse(window.localStorage.getItem(\"categories\") || \"[]\")\nexport interface IToDo {\n  text: string;\n  id: number;\n  category: string;\n}\n\nexport const categoryState = atom<string>({\n  key: \"category\",\n  default: Categories.TO_DO\n})\n\nexport const toDoState = atom<IToDo[]>({\n  key: \"toDo\",\n  default: JSON.parse(window.localStorage.getItem(\"ToDos\") || \"[]\"),\n})\n\nexport const toDoSelector = selector({\n  key: \"toDoSelector\",\n  get: ({ get }) => {\n    const toDos = get(toDoState);\n    const category = get(categoryState);\n    return toDos.filter(toDo => toDo.category === category)\n  }\n})\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: false,\n})","import { useForm } from \"react-hook-form\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { categoryState, CustomCategories } from \"../atoms\";\ninterface IForm {\n  category: string;\n}\nfunction CreateCategory() {\n  const { register, handleSubmit, setValue, formState: { errors }, setError } = useForm<IForm>();\n  const setCategory = useSetRecoilState(categoryState)\n  const onSubmit = ({ category }: IForm) => {\n    if (CustomCategories.findIndex((data) => data === category) !== -1) return setError(\"category\", { message: `${category} is already exists` }, { shouldFocus: true })\n    CustomCategories.push(category)\n    setCategory(category)\n    setValue(\"category\", \"\");\n    window.localStorage.setItem(\"categories\", JSON.stringify(CustomCategories))\n  }\n  const Input = styled.input`\n    background-color: ${props => props.theme.boxBgColor};\n    color: ${props => props.theme.boxTextColor};\n    font-size: inherit;\n    padding: .5em 10px;\n    border: 0;\n    margin: 0;\n    border-radius: 3px;\n    text-indent: 0.01px;\n    text-overflow: '';\n    -webkit-appearance: button;\n    margin-right: 10px;\n  `\n  const Btn = styled.button`\n    background-color: ${props => props.theme.boxBgColor};\n    color: ${props => props.theme.accentColor};\n    font-size: inherit;\n    padding: .5em;\n    border: 0;\n    margin: 0;\n    border-radius: 3px;\n    text-indent: 0.01px;\n    text-overflow: '';\n    -webkit-appearance: button;\n    cursor: pointer;\n  `\n  const Form = styled.form`\n    position: relative;\n    span {\n      color: red;\n      left: 0;\n      bottom: 0;\n      transform: translate(0,150%);\n      width: 100%;\n    }\n  `\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Input {...register(\"category\", {\n        required: \"Please write a Custom Category\"\n      })} placeholder=\"Add Category...\"></Input>\n      <Btn>Add</Btn>\n      <span style={{ color: \"red\", position: \"absolute\", bottom: \"0\" }}>{errors?.category?.message || \"\"}</span>\n    </Form>\n  )\n}\n\nexport default CreateCategory;","import { useForm } from \"react-hook-form\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { categoryState, toDoState } from \"../atoms\"\n\ninterface IForm {\n  toDo: string;\n}\n\nfunction CreateToDo() {\n  const setToDos = useSetRecoilState(toDoState);\n  const category = useRecoilValue(categoryState);\n  const { register, handleSubmit, setValue } = useForm<IForm>();\n  const onSubmit = ({ toDo }: IForm) => {\n    setToDos((oldToDos) => {\n      const newToDos = [{ text: toDo, id: Date.now(), category }, ...oldToDos]\n      window.localStorage.setItem(\"ToDos\", JSON.stringify(newToDos))\n      return newToDos\n    })\n    setValue(\"toDo\", \"\");\n  };\n  const Input = styled.input`\n  background-color: ${props => props.theme.boxBgColor};\n  color: ${props => props.theme.boxTextColor};\n  font-size: inherit;\n  padding: .5em 10px;\n  border: 0;\n  margin: 0;\n  border-radius: 3px;\n  text-indent: 0.01px;\n  text-overflow: '';\n  -webkit-appearance: button;\n  margin-right: 10px;\n`\n  const Btn = styled.button`\n  background-color: ${props => props.theme.boxBgColor};\n  color: ${props => props.theme.accentColor};\n  font-size: inherit;\n  padding: .5em;\n  border: 0;\n  margin: 0;\n  border-radius: 3px;\n  text-indent: 0.01px;\n  text-overflow: '';\n  -webkit-appearance: button;\n  cursor: pointer;\n`\n  return (\n    <form style={{ marginBottom: \"30px\" }} onSubmit={handleSubmit(onSubmit)}>\n      <Input {...register(\"toDo\", {\n        required: \"Please write a To Do\"\n      })} placeholder=\"Todo\"></Input>\n      <Btn>Add</Btn>\n    </form>\n  );\n}\nexport default CreateToDo","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, CustomCategories, IToDo, toDoState } from \"../atoms\";\n\nfunction ToDo({ text, category, id }: IToDo) {\n  const setToDos = useSetRecoilState(toDoState);\n  const setCategory = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { currentTarget: { name } } = event;\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex(toDo => toDo.id === id);\n      const newToDo = { text, id, category: name as string };\n      const newToDos = [\n        ...oldToDos.slice(0, targetIndex),\n        newToDo,\n        ...oldToDos.slice(targetIndex + 1)\n      ]\n      window.localStorage.setItem(\"ToDos\", JSON.stringify(newToDos))\n      return newToDos\n    })\n  }\n  const deleteToDo = () => {\n    setToDos((oldToDos) => {\n      const targetIndex = oldToDos.findIndex(toDo => toDo.id === id);\n      const newToDos = [\n        ...oldToDos.slice(0, targetIndex),\n        ...oldToDos.slice(targetIndex + 1)\n      ]\n      window.localStorage.setItem(\"ToDos\", JSON.stringify(newToDos))\n      return newToDos\n    })\n  }\n  const Li = styled.li`\n  margin-bottom: 20px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  grid-gap: 20px;\n  `;\n  const Grid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    button {\n      margin: 1px;\n      color: ${props => props.theme.boxTextColor};\n      background-color: ${props => props.theme.boxBgColor};\n      padding: 3px;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n    }\n    button:hover {\n      color: ${props => props.theme.accentColor};\n    }\n  `\n  return <Li>\n    <span>{text}</span>\n    <Grid>\n      {category !== Categories.TO_DO && <button name={Categories.TO_DO} onClick={setCategory}>ToDo</button>}\n      {category !== Categories.DOING && <button name={Categories.DOING} onClick={setCategory}>Doing</button>}\n      {category !== Categories.DONE && <button name={Categories.DONE} onClick={setCategory}>Done</button>}\n      {CustomCategories.map((customCategory => {\n        if (customCategory === category) return null\n        return <button name={customCategory} key={customCategory} onClick={setCategory}>{customCategory}</button>\n      }\n      ))}\n      <button onClick={deleteToDo}>Delete</button>\n    </Grid>\n  </Li>;\n}\nexport default ToDo","import React from \"react\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { Categories, categoryState, CustomCategories, toDoSelector } from \"../atoms\";\nimport CreateCategory from \"./CreateCategory\";\nimport CreateToDo from \"./CreateToDo\";\nimport ToDo from \"./ToDo\";\n\nfunction ToDoList() {\n  const toDos = useRecoilValue(toDoSelector);\n  const [catecory, setCatecory] = useRecoilState(categoryState)\n  const onInput = (event: React.FormEvent<HTMLSelectElement>) => {\n    setCatecory(event.currentTarget.value as string);\n  }\n\n  const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 50px 0px;\n  `\n  const Title = styled.h1`\n    font-size: 52px;\n    font-weight: bolder;\n    color: ${props => props.theme.accentColor};\n  `;\n  const Box = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 50px;\n`\n  const DropDown = styled.div`\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n  margin: 10px;\n  select {\n    background-color: ${props => props.theme.boxBgColor};\n    color: ${props => props.theme.boxTextColor};\n    font-size: inherit;\n    padding: .5em;\n    padding-right: 2.5em; \n    border: 0;\n    margin: 0;\n    border-radius: 3px;\n    text-indent: 0.01px;\n    text-overflow: '';\n    -webkit-appearance: button;\n  }\n  &::before,\n  &::after {\n    content: \"\";\n    position: absolute;\n    pointer-events: none;\n  }\n  `\n  return (\n    <Container>\n      <Title>To Dos</Title>\n      <Box>\n        <DropDown>\n          <select value={catecory} onInput={onInput}>\n            <option value={Categories.TO_DO}>To Do</option>\n            <option value={Categories.DOING}>Doing</option>\n            <option value={Categories.DONE}>Done</option>\n            {CustomCategories.map((category =>\n              <option key={category} value={category}>{category}</option>))}\n          </select>\n        </DropDown>\n        <CreateCategory></CreateCategory>\n      </Box>\n      <CreateToDo></CreateToDo>\n      <ul style={{ listStyle: \"none\", width: \"50vw\" }}>\n        {toDos.map(aToDo => <ToDo key={aToDo.id} {...aToDo}></ToDo>)}\n      </ul>\n    </Container>\n  );\n}\nexport default ToDoList","export default __webpack_public_path__ + \"static/media/light.0e082f84.png\";","export default __webpack_public_path__ + \"static/media/dark.d7cd1011.png\";","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#E2E4E9\",\n  borderColor: \"#C4C9D4\",\n  primaryTextColor: \"#363C49\",\n  secondaryTextColor: \"#58627D\",\n  errorColor: \"#B42818\",\n  accentColor: \"#FF9500\",\n  boxBgColor: \"#FFFFFF\",\n  boxTextColor: \"#555c6e\"\n}\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2B303B\",\n  borderColor: \"#58627d\",\n  primaryTextColor: \"#FFFFFF\",\n  secondaryTextColor: \"#C4C9D4\",\n  errorColor: \"#B42818\",\n  accentColor: \"#FF9500\",\n  boxBgColor: \"#555c6e\",\n  boxTextColor: \"#f1f2f4\"\n}\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport ToDoList from \"./components/ToDoList\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\nimport lightIcon from \"./img/light.png\";\nimport darkIcon from \"./img/dark.png\";\nimport { darkTheme, lightTheme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color: ${props => props.theme.primaryTextColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`\n\nfunction App() {\n\n  const isDark = useRecoilValue(isDarkAtom)\n  const TopBar = styled.div`\n    width: 100%;\n  `;\n  const ThemeChanger = styled.button`\n    width: 50px;\n    height: 50px;\n    float: right;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    img {\n      width:100%;\n    }\n  `;\n\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom(prev => !prev);\n\n  return <>\n    <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n      <TopBar>\n        <ThemeChanger onClick={toggleDarkAtom}><img src={isDark ? lightIcon : darkIcon} alt=\"Change Theme Botton\"></img></ThemeChanger>\n      </TopBar>\n      <GlobalStyle />\n      <ToDoList />\n    </ThemeProvider>\n  </>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darkTheme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <App></App>\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode >,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}