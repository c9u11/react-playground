{"version":3,"sources":["api.ts","atoms.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.tsx","img/light.png","img/dark.png","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","res","json","fetchCoinTickers","coinId","isDarkAtom","atom","key","default","Chart","isDark","useRecoilValue","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","data","type","series","name","map","price","time_open","open","toFixed","high","low","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","yaxis","xaxis","axisBorder","axisTicks","categories","time_close","tooltip","y","formatter","value","plotOptions","candlestick","colors","upward","downward","Table","styled","table","props","boxBgColor","boxTextColor","secondaryTextColor","Price","priceData","quotes","USD","percent_change_15m","percent_change_30m","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","Title","h1","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","tickersLoading","tickersData","loading","Helmet","to","rank","symbol","description","total_supply","max_supply","path","CoinsList","ul","li","primaryTextColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","basename","lightTheme","bgColor","borderColor","errorColor","darkTheme","GlobalStyle","createGlobalStyle","App","TopBar","ThemeChanger","button","setDarkAtom","useSetRecoilState","onClick","prev","lightIcon","darkIcon","alt","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.35205ac7.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then(res => res.json());\n}\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then(res => res.json());\n}\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then(res => res.json());\n}\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 31;\n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then(res => res.json());\n}","import { atom } from \"recoil\";\n\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: false,\n})","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const isDark = useRecoilValue(isDarkAtom)\n\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => [price.time_open, [price.open.toFixed(2), price.high.toFixed(2), price.low.toFixed(2), price.close.toFixed(2)]]),\n            },\n          ]}\n          options={{\n            theme: {\n              mode: isDark ? \"dark\" : \"light\"\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            yaxis: {\n              show: true\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: '#FF9500',\n                  downward: '#06B4F9'\n                }\n              }\n            }\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinTickers } from \"../api\";\n\ninterface PriceProps {\n  coinId: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nconst Table = styled.table`\n  text-align: center;\n  text-transform: uppercase;\n  background-color: ${props => props.theme.boxBgColor};\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  border-radius: 10px;\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 10px;\n  th {\n    color : ${props => props.theme.boxTextColor};\n    font-weight: bolder;\n  }\n  tr {\n    color : ${props => props.theme.secondaryTextColor};\n  }\n`;\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data: priceData } = useQuery<PriceData>(\n    [\"chart\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading price...\"\n      ) : (\n        <Table>\n          <tbody>\n            <tr>\n              <th>Price</th>\n              <td>{priceData?.quotes?.USD.price}</td>\n            </tr>\n            <tr>\n              <th>percent_change_15m</th>\n              <td>{priceData?.quotes?.USD.percent_change_15m}</td>\n            </tr>\n            <tr>\n              <th>percent_change_30m</th>\n              <td>{priceData?.quotes?.USD.percent_change_30m}</td>\n            </tr>\n            <tr>\n              <th>percent_change_1h</th>\n              <td>{priceData?.quotes?.USD.percent_change_1h}</td>\n            </tr>\n            <tr>\n              <th>percent_change_6h</th>\n              <td>{priceData?.quotes?.USD.percent_change_6h}</td>\n            </tr>\n            <tr>\n              <th>percent_change_12h</th>\n              <td>{priceData?.quotes?.USD.percent_change_12h}</td>\n            </tr>\n            <tr>\n              <th>percent_change_24h</th>\n              <td>{priceData?.quotes?.USD.percent_change_24h}</td>\n            </tr>\n            <tr>\n              <th>percent_change_7d</th>\n              <td>{priceData?.quotes?.USD.percent_change_7d}</td>\n            </tr>\n            <tr>\n              <th>percent_change_30d</th>\n              <td>{priceData?.quotes?.USD.percent_change_30d}</td>\n            </tr>\n            <tr>\n              <th>percent_change_1y</th>\n              <td>{priceData?.quotes?.USD.percent_change_1y}</td>\n            </tr>\n          </tbody>\n        </Table>\n      )}\n    </div>\n  )\n}\n\nexport default Price;","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  position: relative;\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  a {\n    position: absolute;\n    left: 0;\n    font-size: 40px;\n    &:hover {\n      color: ${props => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${props => props.theme.boxBgColor};\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${props => props.theme.boxBgColor};\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.boxTextColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Link to=\"/\">&larr;</Link>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\nconst Coin = styled.li`\n  background-color: ${props => props.theme.boxBgColor};\n  color:${props => props.theme.boxTextColor};\n  border-radius: 10px;\n  margin-bottom: 10px;\n  box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;\n  a{\n      display: flex;\n    align-items: center;\n    transition: color 0.2s ease-in;\n    padding: 20px;\n  }\n  &:hover {\n    a{\n      color: ${props => props.theme.accentColor}\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color:${props => props.theme.primaryTextColor};\n  font-weight: bolder;\n`\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 25px;\n  height: 25px;\n  margin-right: 10px;\n`\n\ninterface ICoin {\n  id: string,\n  name: string,\n  symbol: string,\n  rank: number,\n  is_new: boolean,\n  is_active: boolean,\n  type: string,\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins)\n  return <Container>\n    <Header>\n      <Title>Coins</Title>\n    </Header>\n    {isLoading ? <Loader>Loading...</Loader> :\n      <CoinsList>\n        {data?.slice(0, 100).map(coin => <Coin key={coin.id}>\n          <Link to={{\n            pathname: `/${coin.id}`,\n            state: coin,\n          }}>\n            <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\n            {coin.name} &rarr;</Link >\n        </Coin>)}\n      </CoinsList>\n    }\n  </Container>\n};\n\nexport default Coins;\n\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Coin from \"./routes/Coin\"\nimport Coins from \"./routes/Coins\"\n\nfunction Router() {\n  return <BrowserRouter basename=\"/react-playground/crypto-tracker/build\">\n    <Switch>\n      <Route path=\"/:coinId\">\n        <Coin></Coin>\n      </Route>\n      <Route path=\"/\">\n        <Coins></Coins>\n      </Route>\n    </Switch>\n  </BrowserRouter>\n}\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: \"#E2E4E9\",\n  borderColor: \"#C4C9D4\",\n  primaryTextColor: \"#363C49\",\n  secondaryTextColor: \"#58627D\",\n  errorColor: \"#B42818\",\n  accentColor: \"#FF9500\",\n  boxBgColor: \"#FFFFFF\",\n  boxTextColor: \"#555c6e\"\n}\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#2B303B\",\n  borderColor: \"#58627d\",\n  primaryTextColor: \"#FFFFFF\",\n  secondaryTextColor: \"#C4C9D4\",\n  errorColor: \"#B42818\",\n  accentColor: \"#FF9500\",\n  boxBgColor: \"#555c6e\",\n  boxTextColor: \"#f1f2f4\"\n}\n","export default __webpack_public_path__ + \"static/media/light.0e082f84.png\";","export default __webpack_public_path__ + \"static/media/dark.d7cd1011.png\";","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\"\nimport { darkTheme, lightTheme } from \"./theme\";\nimport lightIcon from \"./img/light.png\";\nimport darkIcon from \"./img/dark.png\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nfont-family: 'Source Sans Pro', sans-serif;\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, menu, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n  /* HTML5 hidden-attribute fix for newer browsers */\n  *[hidden] {\n      display: none;\n  }\n  body {\n    line-height: 1;\n  }\n  menu, ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  body {\n    font-family: 'Source Sans Pro', sans-serif;\n    background-color: ${props => props.theme.bgColor};\n    color: ${props => props.theme.primaryTextColor};\n  }\n  a {\n    text-decoration: none;\n    color: inherit;\n  }\n`\nfunction App() {\n\n  const isDark = useRecoilValue(isDarkAtom)\n  const TopBar = styled.div`\n    width: 100%;\n  `;\n  const ThemeChanger = styled.button`\n    width: 50px;\n    height: 50px;\n    float: right;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    img {\n      width:100%;\n    }\n  `;\n\n  const setDarkAtom = useSetRecoilState(isDarkAtom);\n  const toggleDarkAtom = () => setDarkAtom(prev => !prev);\n\n  return (\n    <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n      <TopBar>\n        <ThemeChanger onClick={toggleDarkAtom}><img src={isDark ? lightIcon : darkIcon} alt=\"Change Theme Botton\"></img></ThemeChanger>\n      </TopBar>\n      <GlobalStyle>\n      </GlobalStyle>\n      <Router></Router>\n      <ReactQueryDevtools initialIsOpen={true} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App></App>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode >,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}